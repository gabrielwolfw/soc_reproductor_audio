-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.


-- Generated by Quartus Prime Version 18.0 (Build Build 614 04/24/2018)
-- Created on Mon Jun 09 10:45:44 2025

COMPONENT soc_audio
	PORT
	(
		audio_BCLK		:	 IN STD_LOGIC;
		audio_DACDAT		:	 OUT STD_LOGIC;
		audio_DACLRCK		:	 IN STD_LOGIC;
		buttons_export		:	 IN STD_LOGIC_VECTOR(3 DOWNTO 0);
		clk_clk		:	 IN STD_LOGIC;
		hps_io_hps_io_sdio_inst_CMD		:	 INOUT STD_LOGIC;
		hps_io_hps_io_sdio_inst_D0		:	 INOUT STD_LOGIC;
		hps_io_hps_io_sdio_inst_D1		:	 INOUT STD_LOGIC;
		hps_io_hps_io_sdio_inst_CLK		:	 OUT STD_LOGIC;
		hps_io_hps_io_sdio_inst_D2		:	 INOUT STD_LOGIC;
		hps_io_hps_io_sdio_inst_D3		:	 INOUT STD_LOGIC;
		hps_io_hps_io_uart0_inst_RX		:	 IN STD_LOGIC;
		hps_io_hps_io_uart0_inst_TX		:	 OUT STD_LOGIC;
		hps_io_hps_io_uart0_inst_CTS		:	 IN STD_LOGIC;
		hps_io_hps_io_uart0_inst_RTS		:	 OUT STD_LOGIC;
		memory_mem_a		:	 OUT STD_LOGIC_VECTOR(12 DOWNTO 0);
		memory_mem_ba		:	 OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
		memory_mem_ck		:	 OUT STD_LOGIC;
		memory_mem_ck_n		:	 OUT STD_LOGIC;
		memory_mem_cke		:	 OUT STD_LOGIC;
		memory_mem_cs_n		:	 OUT STD_LOGIC;
		memory_mem_ras_n		:	 OUT STD_LOGIC;
		memory_mem_cas_n		:	 OUT STD_LOGIC;
		memory_mem_we_n		:	 OUT STD_LOGIC;
		memory_mem_reset_n		:	 OUT STD_LOGIC;
		memory_mem_dq		:	 INOUT STD_LOGIC_VECTOR(31 DOWNTO 0);
		memory_mem_dqs		:	 INOUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		memory_mem_dqs_n		:	 INOUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		memory_mem_odt		:	 OUT STD_LOGIC;
		memory_mem_dm		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		memory_oct_rzqin		:	 IN STD_LOGIC;
		reset_reset_n		:	 IN STD_LOGIC;
		seven_segments_export		:	 OUT STD_LOGIC_VECTOR(27 DOWNTO 0)
	);
END COMPONENT;